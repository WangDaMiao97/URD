% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plot-dim-3D.R
\name{plotDim3D}
\alias{plotDim3D}
\title{Dimensionality reduction plot in 3D.}
\usage{
plotDim3D(
  object,
  label,
  label.type = "search",
  reduction.use = c("dm", "pca"),
  view = NULL,
  dim.1 = NULL,
  dim.2 = NULL,
  dim.3 = NULL,
  w.1 = NULL,
  w.2 = NULL,
  w.3 = NULL,
  cells = NULL,
  alpha = 0.2,
  size = 4,
  title = NULL,
  title.cex = 3,
  title.line = 0,
  bounding.box = T,
  xlab = NULL,
  ylab = NULL,
  zlab = NULL,
  continuous.colors = NULL,
  continuous.color.limits = NULL,
  discrete.colors = NULL
)
}
\arguments{
\item{object}{An URD object}

\item{label}{(Character) Data to use for coloring points (e.g. a metadata name, group ID from clustering, or a gene name)}

\item{label.type}{(Character) Type of data to search for the label. Default is "search" which checks several data types in order. For more information: \code{\link{data.for.plot}}}

\item{reduction.use}{(Character) Dimensionality reduction to use (Diffusion Map ("dm") or PCA ("pca"))}

\item{view}{(Character) Stored view to use. These are created with \code{\link{plotDim3DStoreView}} and contain the dimensions and weights to use, as well as the stored orientation of the plot. Should be the name of an entry in the list \code{@plot.3d}.}

\item{dim.1}{(Numeric vector) Component(s) to use on x-axis. If > 1, they will be interpolated according to weights in \code{w.1}.}

\item{dim.2}{(Numeric vector) Component(s) to use on y-axis. If > 1, they will be interpolated according to weights in \code{w.2}.}

\item{dim.3}{(Numeric vector) Component(s) to use on z-axis. If > 1, they will be interpolated according to weights in \code{w.3}.}

\item{w.1}{(Numeric vector) Weight to use for the members of \code{dim.1}. Defaults to equal weights for all members. Important to note that these can be negative to reverse the contribution of particular dimensions.}

\item{w.2}{(Numeric vector) Weight to use for the members of \code{dim.1}. Defaults to equal weights for all members. Important to note that these can be negative to reverse the contribution of particular dimensions.}

\item{w.3}{(Numeric vector) Weight to use for the members of \code{dim.1}. Defaults to equal weights for all members. Important to note that these can be negative to reverse the contribution of particular dimensions.}

\item{cells}{(Character vector) Cells to plot. (Default \code{NULL} plots all cells.)}

\item{alpha}{(Numeric) Transparency of points on plot: 0 (Transparent) - 1 (Opaque)}

\item{size}{(Numeric) Size of points on plot}

\item{title}{(Character) Title for plot. (This is sensitive to resizing the window after plotting, but if a view is stored, the window will be resized before the title is added, so it will be acceptable resolution for figures.)}

\item{title.cex}{(Numeric) Adjust the title font size}

\item{title.line}{(Numeric) Adjust the position of the title. Positive numbers move the title upward.}

\item{bounding.box}{(Logical) Should a bounding box with axis labels be displayed on the plot?}

\item{xlab}{(Character) Label for x-axis (if \code{bounding.box=T})}

\item{ylab}{(Character) Label for y-axis (if \code{bounding.box=T})}

\item{zlab}{(Character) Label for z-axis (if \code{bounding.box=T})}

\item{continuous.colors}{(Character vector) Vector of colors to use if data is continuous}

\item{continuous.color.limits}{(Numeric vector, length 2) Limits of data for color scale. Data outside these limits will be squished. \code{NULL} uses the original range of the data.}

\item{discrete.colors}{(Character vector) Vector of colors to use if data is discrete}
}
\value{
Returns nothing, but produces an output through rgl.
}
\description{
Plots cells according to their coordinates in a dimensionality reduction (tSNE by default,
but also PCA or diffusion map). Cells are colored according to a user set \code{label} that
can range from gene expression, to metadata values, or cluster identity. See 
\code{\link{data.for.plot}} for more information about labels that can be chosen. Views can
be stored using \code{\link{plotDim3DStoreView}} that can reproduce the same orientation
plot repeatedly.
}
